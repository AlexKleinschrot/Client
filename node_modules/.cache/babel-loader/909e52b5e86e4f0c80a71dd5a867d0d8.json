{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\timkl\\\\IdeaProjects\\\\todolist.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\timkl\\\\IdeaProjects\\\\todolist.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\timkl\\\\IdeaProjects\\\\todolist.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\timkl\\\\IdeaProjects\\\\todolist.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\timkl\\\\IdeaProjects\\\\todolist.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\timkl\\\\IdeaProjects\\\\todolist.client\\\\src\\\\todolist\\\\TodoList.js\";\nimport React, { Component } from 'react';\nimport TodoElement from './todoelement/TodoElement';\nimport Axios from 'axios'; //const serverUrl = \"https://jsonplaceholder.typicode.com/todos/\";\n\nvar serverUrl = \"http://localhost:8080/todos/\";\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  function TodoList(props) {\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoList).call(this, props));\n\n    _this.handleSubmitAndCreateNewTodo = function (event) {\n      console.log(\"[handleSubmitAndCreateNewTodo:enter]\");\n      event.preventDefault();\n\n      if (_this.state.title.length > 0) {\n        var todo = {\n          title: _this.state.title,\n          state: \"open\"\n        };\n        Axios.post(serverUrl, todo).then(function (response) {\n          console.log(\"post successful =\", response);\n\n          _this.setState({\n            title: ''\n          });\n\n          var attachedTodos = _this.state.todos.concat(response.data);\n\n          ;\n\n          _this.setState({\n            todos: attachedTodos\n          });\n        }).catch(function (event) {\n          console.log(event);\n        });\n      } else console.log(\"title not set\");\n\n      _this.inputElement.value = '';\n    };\n\n    _this.handleChangingTitle = function (event) {\n      var saveButtonDisabled = true;\n      event.preventDefault();\n      console.log(\"handleChangingTitle called\");\n      var newTitle = event.target.value;\n\n      if (newTitle.length > 0) {\n        saveButtonDisabled = false;\n      }\n\n      _this.setState({\n        title: newTitle,\n        saveButtonDisabled: saveButtonDisabled\n      });\n    };\n\n    _this.apiUpdateTodoItem = function (todo) {\n      console.log(\"[apiUpdateTodoItem] input   : \", todo);\n      var sendeTodo = {\n        id: todo.id,\n        state: todo.state,\n        title: todo.title\n      };\n      console.log(\"[apiUpdateTodoItem] send   : \", sendeTodo);\n      Axios.put(serverUrl + todo.id, sendeTodo, {\n        crossdomain: true\n      }).then(function (response) {\n        console.log(\"[apiUpdateTodoItem] Axios response: \", response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.todoElementCheckBoxHandler = function (id) {\n      console.log(\"Checkbox clicked - id\", id);\n      var newtodos = [];\n      newtodos = _this.state.todos.map(function (todo) {\n        if (todo.id === id) {\n          console.log(\"todo vorher\", todo);\n          if (todo.completed) todo.completed = !todo.completed;\n          if (todo.state) if (todo.state === \"done\") todo.state = \"open\";else todo.state = \"done\";\n          console.log(\"todo hinterher\", todo); //hier aktualisiere die URL\n\n          _this.apiUpdateTodoItem(todo);\n        }\n\n        return todo;\n      });\n      console.log(\"newtodos: \", newtodos);\n\n      _this.setState({\n        todos: newtodos\n      });\n    };\n\n    _this.todoElementDeleteButtonHandler = function (id) {\n      console.log(\"[todoElementDeleteButtonHandler] deleting id:\", id);\n      Axios.delete(serverUrl + id).then(function (response) {\n        if (response.status === 200) {\n          //delete successful now we may update state\n          console.log(_this.state.todos);\n\n          var local_todos = _this.state.todos.filter(function (elem) {\n            return elem.id !== id;\n          });\n\n          _this.setState({\n            todos: local_todos\n          });\n\n          console.log(local_todos);\n        }\n      });\n    };\n\n    _this.render = function () {\n      console.log(\"enter TodoList:render\");\n      var innertodos = [];\n\n      if (_assertThisInitialized(_assertThisInitialized(_this)) && _this.state) {\n        console.log(\"state true\");\n\n        if (_this.state.todos) {\n          console.log(\"state.todos true\");\n\n          if (_this.state.todos.length > 0) {\n            var todostop10 = _this.state.todos.slice(0, 10);\n\n            console.log(todostop10);\n            innertodos = todostop10.map(function (elem) {\n              if (elem.state) {\n                elem.completed = elem.state === \"done\";\n              }\n\n              return React.createElement(TodoElement, {\n                key: elem.id,\n                title: elem.title,\n                completed: elem.completed,\n                checkBoxChanged: _this.todoElementCheckBoxHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)), elem.id),\n                deleteButtonClicked: _this.todoElementDeleteButtonHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)), elem.id),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 132\n                },\n                __self: this\n              });\n            });\n          }\n        }\n      }\n\n      if (innertodos.length === 0) {\n        innertodos = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"Loading Todo-Elements..\");\n      }\n\n      console.log(\"enter TodoList:render\", _this.state);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        align: \"center\",\n        size: \"80%\",\n        background: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: _this.handleSubmitAndCreateNewTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"inputAddNew\",\n        ref: function ref(inp) {\n          _this.inputElement = inp;\n        },\n        type: \"text\",\n        size: \"100\",\n        onChange: _this.handleChangingTitle,\n        minLength: \"5\",\n        placeholder: \"Add todo item...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        onClick: _this.handleSubmitAndCreateNewTodo,\n        className: \"addBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Add\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, innertodos));\n    };\n\n    _this.componentDidMount = function () {\n      console.log(\"enter TodoList:componentDidMount\");\n      Axios.get(serverUrl).then(function (response) {\n        console.log(response.data);\n        response.data.map(function (item) {\n          if (item.state) {\n            //funktioniert mit eigener Todoliste\n            var newitem = null;\n            newitem = {\n              id: item.id,\n              title: item.title,\n              completed: item.state === \"open\" ? false : true\n            };\n            return newitem;\n          } //if (item.completed)\n\n\n          return item;\n        });\n\n        _this.setState({\n          todos: response.data\n        });\n      }).catch(function (event) {\n        return console.log(event);\n      });\n      console.log(\"left TodoList:componentDidMount\");\n\n      _this.inputElement.focus();\n    };\n\n    _this.state = {\n      title: '',\n      saveButtonDisabled: true,\n      todos: []\n    };\n    return _this;\n  }\n\n  return TodoList;\n}(Component);\n\nexport default TodoList;","map":{"version":3,"sources":["C:\\Users\\timkl\\IdeaProjects\\todolist.client\\src\\todolist\\TodoList.js"],"names":["React","Component","TodoElement","Axios","serverUrl","TodoList","props","handleSubmitAndCreateNewTodo","event","console","log","preventDefault","state","title","length","todo","post","then","response","setState","attachedTodos","todos","concat","data","catch","inputElement","value","handleChangingTitle","saveButtonDisabled","newTitle","target","apiUpdateTodoItem","sendeTodo","id","put","crossdomain","error","todoElementCheckBoxHandler","newtodos","map","completed","todoElementDeleteButtonHandler","delete","status","local_todos","filter","elem","render","innertodos","todostop10","slice","bind","inp","componentDidMount","get","item","newitem","focus"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,SAAS,GAAG,8BAAlB;;IAGMC,Q;;;;;AAEF,oBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAChB,kFAAMA,KAAN;;AADgB,UASpBC,4BAToB,GASW,UAACC,KAAD,EAAW;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAF,MAAAA,KAAK,CAACG,cAAN;;AACA,UAAG,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,GAA0B,CAA7B,EACA;AACI,YAAIC,IAAI,GAAG;AACPF,UAAAA,KAAK,EAAC,MAAKD,KAAL,CAAWC,KADV;AAEPD,UAAAA,KAAK,EAAC;AAFC,SAAX;AAKAT,QAAAA,KAAK,CAACa,IAAN,CAAWZ,SAAX,EAAsBW,IAAtB,EACKE,IADL,CACU,UAACC,QAAD,EAAc;AAChBT,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCQ,QAAjC;;AACA,gBAAKC,QAAL,CAAc;AAACN,YAAAA,KAAK,EAAC;AAAP,WAAd;;AACA,cAAIO,aAAa,GAAG,MAAKR,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBJ,QAAQ,CAACK,IAAjC,CAApB;;AAA2D;;AAC3D,gBAAKJ,QAAL,CAAc;AAACE,YAAAA,KAAK,EAACD;AAAP,WAAd;AACH,SANL,EAOKI,KAPL,CAOW,UAAAhB,KAAK,EAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,SATL;AAUH,OAjBD,MAmBIC,OAAO,CAACC,GAAR,CAAY,eAAZ;;AAEJ,YAAKe,YAAL,CAAkBC,KAAlB,GAAwB,EAAxB;AACH,KAlCmB;;AAAA,UAoCpBC,mBApCoB,GAoCE,UAACnB,KAAD,EAAW;AAC7B,UAAIoB,kBAAkB,GAAG,IAAzB;AACApB,MAAAA,KAAK,CAACG,cAAN;AAEAF,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,UAAMmB,QAAQ,GAAGrB,KAAK,CAACsB,MAAN,CAAaJ,KAA9B;;AACA,UAAIG,QAAQ,CAACf,MAAT,GAAkB,CAAtB,EACA;AACIc,QAAAA,kBAAkB,GAAG,KAArB;AACH;;AACD,YAAKT,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAEgB,QAAR;AAAkBD,QAAAA,kBAAkB,EAACA;AAArC,OAAd;AACH,KA/CmB;;AAAA,UAiDpBG,iBAjDoB,GAiDA,UAAChB,IAAD,EAAU;AAC1BN,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CK,IAA7C;AACA,UAAIiB,SAAS,GAAG;AAACC,QAAAA,EAAE,EAAClB,IAAI,CAACkB,EAAT;AAAarB,QAAAA,KAAK,EAACG,IAAI,CAACH,KAAxB;AAA+BC,QAAAA,KAAK,EAACE,IAAI,CAACF;AAA1C,OAAhB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA4CsB,SAA5C;AAEA7B,MAAAA,KAAK,CAAC+B,GAAN,CAAU9B,SAAS,GAAGW,IAAI,CAACkB,EAA3B,EAA+BD,SAA/B,EAA0C;AAAEG,QAAAA,WAAW,EAAE;AAAf,OAA1C,EACKlB,IADL,CACU,UAACC,QAAD,EAAc;AAChBT,QAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAmDQ,QAAnD;AACH,OAHL,EAIKM,KAJL,CAIW,UAAUY,KAAV,EAAiB;AACpB3B,QAAAA,OAAO,CAACC,GAAR,CAAY0B,KAAZ;AACH,OANL;AAOH,KA7DmB;;AAAA,UA+DpBC,0BA/DoB,GA+DS,UAACJ,EAAD,EAAQ;AACjCxB,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCuB,EAApC;AACA,UAAIK,QAAQ,GAAG,EAAf;AAEAA,MAAAA,QAAQ,GAAG,MAAK1B,KAAL,CAAWS,KAAX,CAAiBkB,GAAjB,CAAqB,UAACxB,IAAD,EAAU;AACtC,YAAIA,IAAI,CAACkB,EAAL,KAAYA,EAAhB,EACA;AACIxB,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BK,IAA3B;AACA,cAAGA,IAAI,CAACyB,SAAR,EACIzB,IAAI,CAACyB,SAAL,GAAiB,CAACzB,IAAI,CAACyB,SAAvB;AACJ,cAAGzB,IAAI,CAACH,KAAR,EACI,IAAIG,IAAI,CAACH,KAAL,KAAe,MAAnB,EACIG,IAAI,CAACH,KAAL,GAAa,MAAb,CADJ,KAGIG,IAAI,CAACH,KAAL,GAAY,MAAZ;AACRH,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BK,IAA9B,EATJ,CAUI;;AACA,gBAAKgB,iBAAL,CAAuBhB,IAAvB;AACH;;AACD,eAAOA,IAAP;AACH,OAhBU,CAAX;AAiBAN,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB4B,QAAzB;;AACA,YAAKnB,QAAL,CAAc;AAACE,QAAAA,KAAK,EAACiB;AAAP,OAAd;AACH,KAtFmB;;AAAA,UAwFpBG,8BAxFoB,GAwFa,UAACR,EAAD,EAAQ;AACrCxB,MAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA4DuB,EAA5D;AACA9B,MAAAA,KAAK,CAACuC,MAAN,CAAatC,SAAS,GAAC6B,EAAvB,EACKhB,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,YAAIA,QAAQ,CAACyB,MAAT,KAAoB,GAAxB,EAA4B;AACxB;AACAlC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAKE,KAAL,CAAWS,KAAvB;;AACA,cAAIuB,WAAW,GAAG,MAAKhC,KAAL,CAAWS,KAAX,CAAiBwB,MAAjB,CAAwB,UAAAC,IAAI,EAAI;AAAC,mBAAQA,IAAI,CAACb,EAAL,KAAYA,EAApB;AAAyB,WAA1D,CAAlB;;AACA,gBAAKd,QAAL,CAAc;AAACE,YAAAA,KAAK,EAACuB;AAAP,WAAd;;AACAnC,UAAAA,OAAO,CAACC,GAAR,CAAYkC,WAAZ;AAEH;AACJ,OAVL;AAWH,KArGmB;;AAAA,UAuGpBG,MAvGoB,GAuGX,YAAM;AACXtC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,UAAIsC,UAAU,GAAG,EAAjB;;AACA,UAAI,yDAAQ,MAAKpC,KAAjB,EACA;AACIH,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,YAAK,MAAKE,KAAL,CAAWS,KAAhB,EACA;AACIZ,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,cAAI,MAAKE,KAAL,CAAWS,KAAX,CAAiBP,MAAjB,GAA0B,CAA9B,EACA;AACI,gBAAImC,UAAU,GAAG,MAAKrC,KAAL,CAAWS,KAAX,CAAiB6B,KAAjB,CAAuB,CAAvB,EAA0B,EAA1B,CAAjB;;AACAzC,YAAAA,OAAO,CAACC,GAAR,CAAYuC,UAAZ;AACAD,YAAAA,UAAU,GAAGC,UAAU,CAACV,GAAX,CAAe,UAAAO,IAAI,EAAI;AACjC,kBAAIA,IAAI,CAAClC,KAAT,EAAgB;AACZkC,gBAAAA,IAAI,CAACN,SAAL,GAAkBM,IAAI,CAAClC,KAAL,KAAe,MAAjC;AACH;;AACA,qBACI,oBAAC,WAAD;AACQ,gBAAA,GAAG,EAAEkC,IAAI,CAACb,EADlB;AAEQ,gBAAA,KAAK,EAAEa,IAAI,CAACjC,KAFpB;AAGQ,gBAAA,SAAS,EAAEiC,IAAI,CAACN,SAHxB;AAIQ,gBAAA,eAAe,EAAE,MAAKH,0BAAL,CAAgCc,IAAhC,wDAA0CL,IAAI,CAACb,EAA/C,CAJzB;AAKQ,gBAAA,mBAAmB,EAAE,MAAKQ,8BAAL,CAAoCU,IAApC,wDAA8CL,IAAI,CAACb,EAAnD,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,aAZY,CAAb;AAaH;AACJ;AACJ;;AACD,UAAIe,UAAU,CAAClC,MAAX,KAAsB,CAA1B,EACA;AACIkC,QAAAA,UAAU,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAb;AACH;;AACDvC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,MAAKE,KAA1C;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAE,QAAZ;AAAsB,QAAA,IAAI,EAAE,KAA5B;AAAmC,QAAA,UAAU,EAAC,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,QAAQ,EAAE,MAAKL,4BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,aADd;AAEI,QAAA,GAAG,EAAE,aAAC6C,GAAD,EAAS;AAAC,gBAAK3B,YAAL,GAAoB2B,GAApB;AAAwB,SAF3C;AAGI,QAAA,IAAI,EAAE,MAHV;AAII,QAAA,IAAI,EAAE,KAJV;AAKI,QAAA,QAAQ,EAAE,MAAKzB,mBALnB;AAMI,QAAA,SAAS,EAAE,GANf;AAOI,QAAA,WAAW,EAAC,kBAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EASI;AAAM,QAAA,OAAO,EAAE,MAAKpB,4BAApB;AAAkD,QAAA,SAAS,EAAC,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATJ,CADJ,CADJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,EAeI;AAAK,QAAA,KAAK,EAAE,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKyC,UADL,CAfJ,CADJ;AAqBH,KA9JmB;;AAAA,UAgKpBK,iBAhKoB,GAgKA,YAAM;AACtB5C,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AAEAP,MAAAA,KAAK,CAACmD,GAAN,CAAUlD,SAAV,EACKa,IADL,CACU,UAAAC,QAAQ,EAAK;AACfT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACK,IAArB;AACAL,QAAAA,QAAQ,CAACK,IAAT,CAAcgB,GAAd,CAAkB,UAACgB,IAAD,EAAU;AACxB,cAAIA,IAAI,CAAC3C,KAAT,EACA;AACI;AACA,gBAAI4C,OAAO,GAAG,IAAd;AACAA,YAAAA,OAAO,GAAG;AAACvB,cAAAA,EAAE,EAACsB,IAAI,CAACtB,EAAT;AAAapB,cAAAA,KAAK,EAAC0C,IAAI,CAAC1C,KAAxB;AAA+B2B,cAAAA,SAAS,EAAEe,IAAI,CAAC3C,KAAL,KAAe,MAAf,GAAwB,KAAxB,GAAgC;AAA1E,aAAV;AACA,mBAAO4C,OAAP;AACH,WAPuB,CAQxB;;;AACA,iBAAOD,IAAP;AACH,SAVD;;AAWA,cAAKpC,QAAL,CAAc;AAACE,UAAAA,KAAK,EAAEH,QAAQ,CAACK;AAAjB,SAAd;AACH,OAfL,EAgBKC,KAhBL,CAgBW,UAAAhB,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,OAhBhB;AAiBAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;;AACA,YAAKe,YAAL,CAAkBgC,KAAlB;AAEH,KAvLmB;;AAEhB,UAAK7C,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETe,MAAAA,kBAAkB,EAAE,IAFX;AAGTP,MAAAA,KAAK,EAAE;AAHE,KAAb;AAFgB;AAOnB;;;EATkBpB,S;;AA6LvB,eAAeI,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport TodoElement from './todoelement/TodoElement';\r\nimport Axios from 'axios';\r\n\r\n//const serverUrl = \"https://jsonplaceholder.typicode.com/todos/\";\r\nconst serverUrl = \"http://localhost:8080/todos/\";\r\n\r\n\r\nclass TodoList extends Component{\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            saveButtonDisabled: true,\r\n            todos: []\r\n        }\r\n    }\r\n\r\n    handleSubmitAndCreateNewTodo = (event) => {\r\n        console.log(\"[handleSubmitAndCreateNewTodo:enter]\");\r\n        event.preventDefault();\r\n        if(this.state.title.length > 0)\r\n        {\r\n            let todo = {\r\n                title:this.state.title,\r\n                state:\"open\"\r\n            };\r\n\r\n            Axios.post(serverUrl, todo)\r\n                .then((response) => {\r\n                    console.log(\"post successful =\", response);\r\n                    this.setState({title:''});\r\n                    let attachedTodos = this.state.todos.concat(response.data);;\r\n                    this.setState({todos:attachedTodos});\r\n                })\r\n                .catch(event => {\r\n                    console.log(event)\r\n                });\r\n        }\r\n        else\r\n            console.log(\"title not set\")\r\n\r\n        this.inputElement.value='';\r\n    }\r\n\r\n    handleChangingTitle = (event) => {\r\n        let saveButtonDisabled = true;\r\n        event.preventDefault();\r\n\r\n        console.log(\"handleChangingTitle called\");\r\n        const newTitle = event.target.value;\r\n        if (newTitle.length > 0)\r\n        {\r\n            saveButtonDisabled = false;\r\n        }\r\n        this.setState({title: newTitle, saveButtonDisabled:saveButtonDisabled});\r\n    }\r\n\r\n    apiUpdateTodoItem = (todo) => {\r\n        console.log(\"[apiUpdateTodoItem] input   : \",todo);\r\n        let sendeTodo = {id:todo.id, state:todo.state, title:todo.title};\r\n        console.log(\"[apiUpdateTodoItem] send   : \",sendeTodo);\r\n\r\n        Axios.put(serverUrl + todo.id, sendeTodo, { crossdomain: true })\r\n            .then((response) => {\r\n                console.log(\"[apiUpdateTodoItem] Axios response: \",response);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    todoElementCheckBoxHandler = (id) => {\r\n        console.log(\"Checkbox clicked - id\",id);\r\n        let newtodos = [];\r\n\r\n        newtodos = this.state.todos.map((todo) => {\r\n            if (todo.id === id)\r\n            {\r\n                console.log(\"todo vorher\", todo);\r\n                if(todo.completed)\r\n                    todo.completed = !todo.completed;\r\n                if(todo.state)\r\n                    if (todo.state === \"done\")\r\n                        todo.state = \"open\"\r\n                    else\r\n                        todo.state =\"done\";\r\n                console.log(\"todo hinterher\", todo);\r\n                //hier aktualisiere die URL\r\n                this.apiUpdateTodoItem(todo);\r\n            }\r\n            return todo;\r\n        });\r\n        console.log(\"newtodos: \",newtodos)\r\n        this.setState({todos:newtodos});\r\n    }\r\n\r\n    todoElementDeleteButtonHandler = (id) => {\r\n        console.log(\"[todoElementDeleteButtonHandler] deleting id:\",id);\r\n        Axios.delete(serverUrl+id)\r\n            .then(response => {\r\n                if (response.status === 200){\r\n                    //delete successful now we may update state\r\n                    console.log(this.state.todos);\r\n                    let local_todos = this.state.todos.filter(elem => {return (elem.id !== id);});\r\n                    this.setState({todos:local_todos});\r\n                    console.log(local_todos);\r\n\r\n                }\r\n            });\r\n    }\r\n\r\n    render = () => {\r\n        console.log(\"enter TodoList:render\");\r\n        let innertodos = [];\r\n        if (this && this.state)\r\n        {\r\n            console.log(\"state true\");\r\n            if ( this.state.todos)\r\n            {\r\n                console.log(\"state.todos true\");\r\n                if (this.state.todos.length > 0)\r\n                {\r\n                    let todostop10 = this.state.todos.slice(0, 10);\r\n                    console.log(todostop10);\r\n                    innertodos = todostop10.map(elem => {\r\n                       if (elem.state) {\r\n                           elem.completed = (elem.state === \"done\");\r\n                       }\r\n                        return (\r\n                            <TodoElement\r\n                                    key={elem.id}\r\n                                    title={elem.title}\r\n                                    completed={elem.completed}\r\n                                    checkBoxChanged={this.todoElementCheckBoxHandler.bind(this,elem.id)}\r\n                                    deleteButtonClicked={this.todoElementDeleteButtonHandler.bind(this,elem.id)}/>\r\n                        )\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if (innertodos.length === 0)\r\n        {\r\n            innertodos = <div>Loading Todo-Elements..</div>\r\n        }\r\n        console.log(\"enter TodoList:render\", this.state);\r\n        return (\r\n            <div>\r\n                <div align={\"center\"} size={\"80%\"} background=\"red\">\r\n                    <form onSubmit={this.handleSubmitAndCreateNewTodo}>\r\n                        <input\r\n                            className=\"inputAddNew\"\r\n                            ref={(inp) => {this.inputElement = inp} }\r\n                            type={\"text\"}\r\n                            size={\"100\"}\r\n                            onChange={this.handleChangingTitle}\r\n                            minLength={\"5\"}\r\n                            placeholder=\"Add todo item...\"/>\r\n                        <span onClick={this.handleSubmitAndCreateNewTodo} className=\"addBtn\">Add</span>\r\n                    </form>\r\n                </div>\r\n                <hr/>\r\n                <div align={\"center\"}>\r\n                    {innertodos}\r\n                </div>\r\n            </div>\r\n            );\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log(\"enter TodoList:componentDidMount\");\r\n\r\n        Axios.get(serverUrl)\r\n            .then(response  => {\r\n                console.log(response.data);\r\n                response.data.map((item) => {\r\n                    if (item.state)\r\n                    {\r\n                        //funktioniert mit eigener Todoliste\r\n                        let newitem = null;\r\n                        newitem = {id:item.id, title:item.title, completed:(item.state === \"open\" ? false : true)};\r\n                        return newitem;\r\n                    }\r\n                    //if (item.completed)\r\n                    return item;\r\n                })\r\n                this.setState({todos: response.data});\r\n            })\r\n            .catch(event => console.log(event));\r\n        console.log(\"left TodoList:componentDidMount\");\r\n        this.inputElement.focus();\r\n\r\n    }\r\n    }\r\n\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}